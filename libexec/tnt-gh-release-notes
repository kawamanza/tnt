#!/usr/bin/env bash
# Usage: tnt gh-release-notes <BRANCH_NAME>
# Summary: Creates a new pull-request for deployment (merge into master branch)

set -e

[ ! -f ~/.tntrc ] || source ~/.tntrc

_require() {
	if ! which $1 &>/dev/null; then
		echo "Command required to proceed: \"$1\""
		echo "$2"
		exit 1
	fi
}

_json_escape () {
    printf '%s' "$1" | python -c 'import json,sys; print(json.dumps(sys.stdin.read()))'
}

[ $# -ge 1 ] || ( tnt help gh-release-notes; exit 0 )

_require stepup "Use \`gem install step-up\` for installation."

if ! ruby -r step-up -e 'exit(Gem::Version.new(StepUp::VERSION) >= Gem::Version.new("0.9.11") ? 0 : 1)'
then
	echo "Invalid step-up version"
	exit 1
fi

declare BRANCH=$1
if ! git rev-parse origin/$BRANCH &>/dev/null; then
    echo "Unknown ref $BRANCH"
    exit 1
fi
BRANCH=$BRANCH

declare LAST_RELEASE=`stepup version show origin/master | cut -d'+' -f1`
declare NEXT_RELEASE=`echo $LAST_RELEASE | stepup version show origin/$BRANCH --next-release`
declare WHATS_NEW=`stepup notes show origin/$BRANCH`
declare JIRA_VERSION

if [ ! -z $2 ]; then
	JIRA_VERSION="/ \`$2\`"
fi

[ $(wc -l <<<"$WHATS_NEW") -ge 2 ] || ( echo "No release notes found"; exit 1 )

declare REPO_NAME=`basename $(git remote get-url origin) | sed 's,.git$,,'`
declare MSG="Deployment *$REPO_NAME* \`$NEXT_RELEASE\` $JIRA_VERSION
\`\`\`
$WHATS_NEW
\`\`\`"

declare EXECUTOR_NAME=$(git config user.name 2>/dev/null || git log -n1 --format="%aN")

if [ "$NOTIFY_SLACK" == "true" ] && [ ! -z $SLACK_POST_URL ] && [ ! -z $SLACK_RELEASE_CHANNEL ]; then
	curl -v \
		-H 'Content-Type: application/json' \
		-d "{\"channel\":\"$SLACK_RELEASE_CHANNEL\",\"text\":$(_json_escape "$MSG"),\"icon_emoji\":\":ship:\",\"username\":$(_json_escape "$EXECUTOR_NAME (Deployer)")}" \
		$SLACK_POST_URL &>/tmp/tnt-gh-release-notes.log
else
	echo "$MSG"
fi
